On the slave node
-----------------
Configuration on the slave
yum -y install java-1.8.0-openjdk
or  sudo yum install java-11-amazon-corretto in amazon linux

alternatives --config java
export JAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto.x86_64


# Create user 
useradd jenkins-slave-01
sudo su - jenkins-slave-01

# Create SSH Keys
ssh-keygen -t rsa -N "" -f /home/jenkins-slave-01/.ssh/id_rsa

# The private and public keys will be created at these locations 
`/home/jenkins-slave-01/.ssh/id_rsa` and `/home/jenkins-slave-01/.ssh/id_rsa.pub`
cd .ssh
cat id_rsa.pub > authorized_keys
chmod 700 authorized_keys


sudo -i su -c 'sed -i -e "s/MACs /MACs hmac-sha1,/g" /etc/ssh/sshd_config; service sshd restart'
systemctl restart sshd.service
systemctl status sshd

#Restart jenkins on master node if required.

Configuration on Master
-----------------------

Copy the slave node's public key[id_rsa.pub] to Master Node's known_hosts file
mkdir -p /var/lib/jenkins/.ssh
cd /var/lib/jenkins
chown jenkins:jenkins .ssh
chmod 700 .ssh

cd /var/lib/jenkins/.ssh 	

ssh-keyscan -H SLAVE-NODE-PRIVATE-IP >>/var/lib/jenkins/.ssh/known_hosts
# ssh-keyscan -H <ip> >>/var/lib/jenkins/.ssh/known_hosts
copy id_rsa.pub content manually to /var/lib/jenkins/.ssh/known_hosts

chown jenkins:jenkins known_hosts
chmod 700 known_hosts
cd ../



Configure the Slave using Manage Jenkins
Configure the node as shown here Manage Jenkins > Manage Nodes > New Node


--------------------------------
On the webUI
------------
Name: CentosSlave1
# of executors: 1
Remote home directory: /home/jenkins-slave-01
Label: centos1
Launch method: Launch agents via SSH
Host: Private IP address of slave node

Configure credentials
Click Add -> jenkins
Global credentials (unrestricted)
kind: SSH Username and private key
ID: 1
Username: jenkins-slave-01

Private Key: On terminal - On the slave in .ssh directory â€“
vi id_rsa on slave 
copy paste the private key from beginning to end save it
select the credential created and click save

---------------------------------------------
Create a new freestyle job
	Select "Restrict where this project can be run"
	Enter "centos1" as the Label
	Execute shell
		enter "hostname"
		Save
		Build now
	
	
Create another job


	pipeline {
    agent {label "centos1"}
    stages {
        stage('Example Build') {
				steps {
					sh 'hostname'
				}
			}
		}
	}